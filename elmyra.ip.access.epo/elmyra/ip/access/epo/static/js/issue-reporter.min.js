// (c) 2013-2016 Elmyra UG - All rights reserved
IssueReporter=Backbone.Model.extend({defaults:{api_url:"/api/util/issue/report",targets:["log"]},initialize:function(){console.log("Initialize IssueReporter")},setup_stacktrace_interceptor:function(e){var t=this;window.onerror=function(r,i,o,s,n){var a=new IssueReport({origin:"javascript",kind:"exception"});a.set("javascript",{msg:r,file:i,line:o,col:s,stackframes:[]});var u=function(r){var i=r.map(function(e){return e.toString()});a.get("javascript").stackframes=i,t.send(a,e)},l=function(){console.error(n),t.send(a,e)};StackTrace.fromError(n).then(u).catch(l)}},send:function(e,t){t=t||{};var r=this.get("targets");t.targets&&(r=r.concat(t.targets));var i=this.get("api_url");i+="?"+$.param({targets:r.join(",")});var o=$.Deferred();return $.ajax({method:"post",url:i,async:!0,data:JSON.stringify(e.toJSON()),contentType:"application/json; charset=utf-8"}).success(function(e,t,r){console.log("Successfully submitted issue report to backend"),o.resolve(e,t,r)}).error(function(e,t){console.warn("Error submitting issue report to backend"),o.reject(e,t)}),o.promise()}}),IssueReport=Backbone.Model.extend({defaults:{meta:{id:null},application:{},window:{location:window.location.href}},uuid4:function(){var e=function(){return(65536*(1+Math.random())|0).toString(16).substring(1)},t=(e()+e()+"-"+e()+"-4"+e().substr(0,3)+"-"+e()+"-"+e()+e()+e()).toLowerCase();return t},initialize:function(e){console.log("Initialize IssueReport"),e=e||{},this.get("meta").id=this.uuid4(),this.get("application").config=opsChooserApp.config.toJSON(),this.get("application").metadata=opsChooserApp.metadata.toJSON()}}),IssueReporterGui=Backbone.Model.extend({initialize:function(){console.log("Initialize IssueReporterGui"),this.reporter=new IssueReporter},setup_ui:function(){var e=this;$(".report-issue-problem").unbind("click"),$(".report-issue-problem").click(function(t){e.problem({element:this,event:t})})},problem:function(e){e.what="problem",e.remark="We experienced a problem with ...",e.targets="human",this.dialog(e)},dialog:function(e){var t=$("#issue-reporter-dialog"),r=$(e.element).data("dialog-what");e.what=r?r:e.what;var i=$(e.element).data("dialog-remark");e.remark=i?i:e.remark,t.find("#issue-reporter-what").val(e.what?e.what:""),t.find("#issue-reporter-remark").val(e.remark?htmlDecodeRelaxed(e.remark):""),t.modal("show"),t.find("#issue-reporter-send-button").show(),t.find("#issue-reporter-status").empty();var o=function(){var e=t.find("#issue-reporter-what").val();"problem"==e?(t.toggleClass("modal-warning",!0),t.toggleClass("modal-info",!1),t.find("#issue-reporter-label").html('<i class="icon-thumbs-down-alt"></i> Report problem')):"feature"==e&&(t.toggleClass("modal-warning",!1),t.toggleClass("modal-info",!0),t.find("#issue-reporter-label").html('<i class="icon-thumbs-up-alt"></i> Request feature'))};o(),t.find("#issue-reporter-what").unbind("change"),t.find("#issue-reporter-what").on("change",function(){o()});var s=this;t.find("#issue-reporter-send-button").unbind("click"),t.find("#issue-reporter-send-button").bind("click",function(){e.element_spinner=t.find("#issue-reporter-spinner"),e.element_status=t.find("#issue-reporter-status"),e.dialog={what:t.find("#issue-reporter-what").val(),remark:t.find("#issue-reporter-remark").val()},s.submit(e).then(function(){t.find("#issue-reporter-send-button").hide()})})},submit:function(e){var t=e.element,r=new IssueReport({dialog:e.dialog,location:{origin:$(t).data("report-origin"),kind:$(t).data("report-kind"),item:$(t).data("report-item")}}),i=$($(e.element).data("report-html")).html();i&&r.set("html",i);var o=$(e.element_spinner),s=$(e.element_status);return o.show(),this.reporter.send(r,{targets:e.targets}).then(function(){o.hide(),opsChooserApp.ui.user_alert("Report sent successfully. Thank you for giving feedback, we will get back to you on this issue.","success",s)}).fail(function(){o.hide(),opsChooserApp.ui.user_alert("Report failed. Please get back to us via support@elmyra.de.","error",s)})}});var issueReporter=new IssueReporter;issueReporter.setup_stacktrace_interceptor({targets:"log,human"});